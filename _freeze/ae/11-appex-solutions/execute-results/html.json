{
  "hash": "f038e4ba02d6319145de392e814fe47b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Appex 11 -- Penalized Regression in R Solutions\"\nsubtitle: \"STA 363 - Spring 2023\"\nformat: html\ntheme: flatly\n---\n\n\n## Part 1\n\n1. Examine the `Hitters` dataset by running `?Hitters` in the Console\n2. We want to predict a major league player's `Salary` from all of the other 19 variables in this dataset. Create a visualization of `Salary`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ISLR)\nlibrary(tidymodels)\nlibrary(tidyverse)\n\nggplot(Hitters, aes(x = Salary)) +\n  geom_histogram(bins = 20)\n```\n\n::: {.cell-output-display}\n![](11-appex-solutions_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n3. Create a recipe to estimate this model.\n4. Add a preprocessing step to your recipe, scaling each of the predictors\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhitters_recipe <- recipe(Salary ~ ., data = Hitters) |>\n  step_scale(all_predictors()) \n\n## this will run, but there is still a problem because we might have nominal variables, we will fix this in part 2\n```\n:::\n\n\n\n\n## Part 2\n\n1. Add a preprocessing step to your recipe to convert nominal variables into indicators\n2. Add a step to your recipe to remove missing values for the outcome\n3. Add a step to your recipe to impute missing values for the predictors using the average for the remaining values **NOTE THIS IS NOT THE BEST WAY TO DO THIS WE WILL LEARN BETTER TECHNIQUES!**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhitters_recipe <- recipe(Salary ~ ., data = Hitters) |>\n  step_dummy(all_nominal()) |>\n  step_naomit(all_outcomes()) |>\n  step_impute_mean(all_predictors()) |>\n  step_scale(all_predictors()) \n```\n:::\n\n\n\n## Part 3\n\n1. Set a seed `set.seed(1)`\n2. Create a cross validation object for the `Hitters` dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\nhitters_cv <- vfold_cv(Hitters, v = 5)\n```\n:::\n\n\n3. Using the recipe from the previous exercise, fit the model using Ridge regression with a penalty $\\lambda$ = 300\n\n\n::: {.cell}\n\n```{.r .cell-code}\nridge_spec <- linear_reg(penalty = 300, mixture = 0) |>\n  set_engine(\"glmnet\")\n\nhitters_fit <- fit_resamples(\n  ridge_spec,\n  preprocessor = hitters_recipe,\n  resamples = hitters_cv)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'glmnet' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'Matrix' was built under R version 4.3.2\n```\n\n\n:::\n:::\n\n\n4. What is the estimate of the test RMSE for this model?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollect_metrics(hitters_fit) |>\n  filter(.metric == \"rmse\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 6\n  .metric .estimator  mean     n std_err .config             \n  <chr>   <chr>      <dbl> <int>   <dbl> <chr>               \n1 rmse    standard    336.     5    20.0 Preprocessor1_Model1\n```\n\n\n:::\n:::\n\nThe RMSE is 335.66.\n\n## Part 4\n\n1. Using the `Hitters` cross validation object and recipe created in the previous exercise, use `tune_grid` to pick the optimal penalty and mixture values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuned_spec <- linear_reg(penalty = tune(), mixture = tune()) |>\n  set_engine(\"glmnet\")\n```\n:::\n\n\n2. Update the code below to create a grid that includes penalties from 0 to 50 by 1 and mixtures from 0 to 1 by 0.5.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrid <- expand_grid(\n  penalty = seq(0, 50, by = 1),\n  mixture = seq(0, 1, by = 0.5)\n)\n```\n:::\n\n\n3. Use this grid in the `tune_grid` function. Then use `collect_metrics` and filter to only include the RSME estimates.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhitters_tunedfit <- tune_grid(\n  tuned_spec,\n  preprocessor = hitters_recipe,\n  grid = grid,\n  resamples = hitters_cv\n)\n```\n:::\n\n\n4. Create a figure to examine the estimated test RMSE for the grid of penalty and mixture values -- which should you choose?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollect_metrics(hitters_tunedfit) |>\n  filter(.metric == \"rmse\") |>\n  ggplot(aes(x = penalty, y = mean, color = factor(mixture))) +\n  geom_point() +\n  geom_line() + \n  labs(color = expression(alpha),\n       x = expression(lambda))\n```\n\n::: {.cell-output-display}\n![](11-appex-solutions_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n## Part 5\n\n1. Using the final model specification, extract the coefficients from the model by creating a `workflow`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_spec <- linear_reg(penalty = 2, mixture = 1) |>\n  set_engine(\"glmnet\")\n\nworkflow() |>\n  add_recipe(hitters_recipe) |>\n  add_model(final_spec) |>\n  fit(data = Hitters) |>\n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 3\n   term        estimate penalty\n   <chr>          <dbl>   <dbl>\n 1 (Intercept)   140.         2\n 2 AtBat        -257.         2\n 3 Hits          274.         2\n 4 HmRun           1.57       2\n 5 Runs            0          2\n 6 RBI             0          2\n 7 Walks         110.         2\n 8 Years         -50.7        2\n 9 CAtBat         -1.36       2\n10 CHits           0          2\n11 CHmRun         47.2        2\n12 CRuns         241.         2\n13 CRBI          125.         2\n14 CWalks       -160.         2\n15 PutOuts        77.7        2\n16 Assists        30.8        2\n17 Errors        -15.7        2\n18 League_N       16.8        2\n19 Division_W    -59.8        2\n20 NewLeague_N     0          2\n```\n\n\n:::\n:::\n\n\n2. Filter out any coefficients exactly equal to 0\n\n\n::: {.cell}\n\n```{.r .cell-code}\nworkflow() |>\n  add_recipe(hitters_recipe) |>\n  add_model(final_spec) |>\n  fit(data = Hitters) |>\n  tidy() |>\n  filter(estimate != 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16 × 3\n   term        estimate penalty\n   <chr>          <dbl>   <dbl>\n 1 (Intercept)   140.         2\n 2 AtBat        -257.         2\n 3 Hits          274.         2\n 4 HmRun           1.57       2\n 5 Walks         110.         2\n 6 Years         -50.7        2\n 7 CAtBat         -1.36       2\n 8 CHmRun         47.2        2\n 9 CRuns         241.         2\n10 CRBI          125.         2\n11 CWalks       -160.         2\n12 PutOuts        77.7        2\n13 Assists        30.8        2\n14 Errors        -15.7        2\n15 League_N       16.8        2\n16 Division_W    -59.8        2\n```\n\n\n:::\n:::\n\n\n[![](img/favicon.png){width=\"100\" fig-align=\"right\"}](https://bit.ly/sta-363-s23)\n",
    "supporting": [
      "11-appex-solutions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}