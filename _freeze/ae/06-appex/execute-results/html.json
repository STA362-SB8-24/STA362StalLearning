{
  "hash": "b77576cddc27bddffb148a1fb9dc85ea",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Appex 06 -- tidymodels\"\nsubtitle: \"STA 363 - Spring 2023\"\nformat: html\ntheme: flatly\n---\n\n\n## Set up\n\n### Login to RStudio Pro\n\n- **Note:** if you are off campus, you will need to use a [VPN to connect](https://is.wfu.edu/services/vpn/)\n- Go to [rstudio.deac.wfu.edu](rstudio.deac.wfu.edu)\n\n![](img/01/rstudio-pro.png){width=\"1000\" height=\"350\"}\n\n#### Step 1: Create a New Project\n\nClick File > New Project\n\n![](img/01/new-project.png)\n\n#### Step 2: Click \"Version Control\"\n\nClick the third option.\n\n![](img/01/version-control.png)\n\n#### Step 3: Click Git\n\nClick the first option\n\n![](img/01/git.png)\n\n#### Step 4: Copy my starter files\n\nPaste this link in the top box (`Repository url`):\n\n`https://github.com/sta-363-s23/06-appex.git`\n\n![](img/01/paste-link.png)\n\n## Part 1\n\n1. Write a pipe that creates a model that uses `lm()` to fit a linear regression using tidymodels. Save it as `lm_spec` and look at the object. What does it return?\n\n## Part 2\n\n1. Fit the model:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ISLR)\nlm_fit <- fit(lm_spec,\n              mpg ~ horsepower,\n              data = Auto)\nlm_fit\n```\n:::\n\n\n\nDoes this give the same results as\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm(mpg ~ horsepower, data = Auto)\n```\n:::\n\n\n## Part 3\n\n1. Edit the code below to add the original data to the predicted data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg_pred <- lm_fit |> \n  predict(new_data = Auto) |> \n  ---\n```\n:::\n\n\n## Part 4\n\n1. Copy the code below, fill in the blanks to fit a model on the **training** data then calculate the **test** RMSE.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(100)\nAuto_split  <- ________\nAuto_train  <- ________\nAuto_test   <- ________\nlm_fit      <- fit(lm_spec, \n                   mpg ~ horsepower, \n                   data = ________)\nmpg_pred  <- ________ |> \n  predict(new_data = ________) |> \n  bind_cols(________)\nrmse(________, truth = ________, estimate = ________)\n```\n:::\n\n\n## Part 5\n\n1. Edit the code below to get the 5-fold cross validation error rate for the following model:\n\n$mpg = \\beta_0 + \\beta_1 horsepower + \\beta_2 horsepower^2+ \\epsilon$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAuto_cv <- vfold_cv(Auto, v = 5)\n\nresults <- fit_resamples(lm_spec,\n                         ----,\n                         resamples = ---)\n\nresults |>\n  collect_metrics()\n```\n:::\n\n\n* What do you think `rsq` is?\n\n## Part 6\n\n1. Fit 3 models on the data using 5 fold cross validation:\n\n\n     $mpg = \\beta_0 + \\beta_1 horsepower + \\epsilon$ \n     \n     $mpg = \\beta_0 + \\beta_1 horsepower + \\beta_2 horsepower^2+ \\epsilon$\n     \n     $mpg = \\beta_0 + \\beta_1 horsepower + \\beta_2 horsepower^2+ \\beta_3 horsepower^3 +\\epsilon$\n\n\n2. Collect the metrics from each model, saving the results as `results_1`, `results_2`, `results_3`\n\n3. Which model is \"best\"?\n\n[![](img/favicon.png){width=\"100\" fig-align=\"right\"}](https://bit.ly/sta-363-s23)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}