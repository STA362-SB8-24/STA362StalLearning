{
  "hash": "7fc1700c00775b47ed7353cf60920f55",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Homework 5\"\nsubtitle: \"Trees\"\nformat: html\n---\n\n\n\n\n## Due 5/6/2024 at 9am\n\n# Instructions\n\n-   Creating a new *project.* and giving it a sensible name such as homework5 and having that project in the course folder you created.\n\n-   Create a new quarto document and give it a sensible name such as hw5.\n\n-   In the `YAML` add the following (add what you don't have). The embed-resources component will make your final rendered `html` self-contained.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n---\ntitle: \"Document title\"\nauthor: \"Your Name\"\nformat:\n  html:\n    embed-resources: true\n---\n```\n:::\n\n    \n-   Though the book used R code for base R, I want you to complete the exercises using functions from *tidymodels* when possible.\n-   Set a seed before each problem.\n-   Make sure your answers print results. If the output is a large table, use the head() function to shorten the output. \n\n# Exercises\n\n9. This problem involves the `OJ` data set which is part of the `ISLR2` package.\n\n(a) Create a training set containing 80% of the observations. \n\n(b) Fit a tree to the training data, with `Purchase` as the response and the other variables as predictors. Use the `summary()` function to produce summary statistics about the tree, and describe the results obtained. What is the training error rate? How many terminal nodes does the tree have?\n\n(c) Type in the name of the tree object in order to get a detailed text output. \n\n(d) Create a plot of the tree, and interpret the results. Pick one of the terminal nodes, and interpret the information displayed.\n\n\n(e) Predict the response on the test data, and produce a confusion matrix comparing the test labels to the predicted test labels. What is the test error rate?\n\n(f) Use cross validation on the training set in order to determine the optimal tree size.\n\n(g) Produce a plot with tree size on the x-axis and cross-validated classification error rate on the y-axis.\n\n(h) Which tree size corresponds to the lowest cross-validated classification error rate?\n\n(i) Produce a pruned tree corresponding to the optimal tree size obtained using cross-validation. If cross-validation does not lead to selection of a pruned tree, then create a pruned tree with five terminal nodes.\n\n(j) Compare the training error rates between the pruned and unpruned trees. Which is higher? \n\n(k) Compare the test error rates between the pruned and unpruned trees. Which is higher?\n\n(l) Fit a bagged tree model using the training data (you do not need to use cross validation). You will need to change the `mtry` argument to the correct number. What is the test error rate?\n\n(m) Fit a random forest model using the training data (you do not need to use cross validation). You will need to change the `mtry` argument to the correct number. What is the test error rate?\n\n(n) Fit a tree model using cross validation on the training set to tune the `mtry` argument. With your best `mtry` value, refit the model on the whole training set. What is the test error rate?\n\n(o) Finally, create a table that includes the test error for all of the models included above. Give each a name that is clear and include any tuned values. Which model is best and why? \n\n  \n# Submission\n\nWhen you are finished with your homework, be sure to Render the final document. Once rendered, you can download your file by:\n\n-   Finding the .html file in your File pane (on the bottom right of the screen)\n-   Click the check box next to the file\n-   Click the blue gear above and then click \"Export\" to download\n-   Submit your final html document to the respective assignment on [Moodle](%7B%7B%3C%20var%20course.moodle%20%3E%7D%7D)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}